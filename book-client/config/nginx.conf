# The configuration 
events {
   
    worker_connections 8000;  # The maximum number of simultaneous connections that can be opened by a worker process.
   
    multi_accept on; # worker to accept multiple connections at a time
}

http {
    include /etc/nginx/mime.types;  # what to include
    default_type  application/octet-stream; # The default 

    # Sets the log format
    log_format main_ext '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$http_x_forwarded_for" '
        '"$host" sn="$server_name" '
        'rt=$request_time '
        'ua="$upstream_addr" us="$upstream_status" '
        'ut="$upstream_response_time" ul="$upstream_response_length" '
        'cs=$upstream_cache_status' ;

    # save logs here
    access_log  /var/log/nginx/access.log main_ext;
    error_log  /var/log/nginx/error_log;

    server {
        listen 80; # Listen port   

        access_log  /var/log/nginx/access.log main_ext;
        error_log  /var/log/nginx/error_log;

        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html =404;
        }

        location /metrics {
            stub_status;
            
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
            expires 1M;
            access_log off;
            add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}